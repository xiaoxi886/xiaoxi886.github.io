
																	利用嵌套循环之打印图形


——————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————

*******
*******
*******
*******
*******


*									1
***									3
*****								5
*******								7






###*
##***
#*****
*******

打印星号图形有两个关键
1、行数 - 一共有几行
2、列数 - 每行有几颗星

外层循环控制行数
内层循环控制列数



									一 二 三 四 五 六 七
									列 列 列 列 列 列 列
*									0															第一行
***									0、1、2														第二行
*****								0、1、2、3、4												第三行
*******								0、1、2、3、4、5、6											第四行

在每一行中，行数和列数之间的关系
i				j

0				0					i是从0开始算的，初值为0;			j在上面图形中，第一行只有一颗星，一颗星就是0
1				2					i进行i++，值为1						j在上一图形中，第二行有3颗星，由于第一个是0的缘故，j的值为2
2				4					i进行i++，值为2						j在上一图形中，第三行有5颗星，由于第一个是0的缘故，j的值为4
3				6					i进行i++，值为3						j在上一图形中，第三行有7颗星，由于第一个是0的缘故，j的值为6

j = i * 2		他们正好是二倍的关系
代入后应该是	j <= i * 2

i的初始值为0是因为，i的赋值为0，所以查的时候是从0开始算的，每循环一次i++





实现；
		*
		***
		*****
		*******

代码为
		int i,j;
		for(i = 0; i < 4; i++)                                      //控制行数（利用\n换行）
		{
			for(j = 0; j <= i * 2; j++)                                   //控制每行有几颗星、（每循环一次打印一个*）     j = 0是清零
			{
				printf("*");                                         //这里不用换行，因为有外循环换行
			}
			printf("\n");
		}




**********
*********
********
*******
i			j

0			9
1			8
2			7
3			6

规律为		j <= 9 - i




实现；
**********
*********
********
*******
******
*****
****
***
**
*



代码为；
    int i,j;
    for(i = 0; i < 10; i++)                                      //控制行数（利用\n换行）
    {
        for(j = 0; j <= 9 - i; j++)                                   //控制每行有几颗星、（每循环一次打印一个*）     j = 0是清零
        {
            printf("*");                                         //这里不用换行，因为有外循环换行
        }
        printf("\n");
    }






若想要实现；
   *
  ***
 *****
*******


先吧空白的部分用#填满
###*
##***
#*****
*******

#的逻辑；
i			j
0			2
1			1
2			0

j <= 2 - i


然后在内循环里加入#号，先打#号，再打*号

代码；
	int i,j;
    for(i = 0; i < 4; i++)                                      
    {
        for(j = 0; j <= 2 - i; j++)                                   
        {
            printf("#");                                         
        }
        for(j = 0; j <= i * 2; j++)                                   
        {
            printf("*");                                         
        }
        printf("\n");
    }


			效果；
					###*
					##***
					#*****
					*******


然后吧#换成空格，效果；
					   *
					  ***
					 *****
					*******



上半部分
					###*
					##***
					#*****
					*******
下半部分；																			
					#*****
					##***
					###*


把#号换成空格就是完整的图形
					   *
					  ***
					 *****
					*******
					 *****	
					  ***	
					   *	
					
					
					
#*****
##***
###*					
#号的关系			*号的关系				
i		j			i		j		
							
0		0			0		4
1		1			1		2
2		2			2		0
					
i和j的关系			i和j的关系		
					
j <= i				j <= 4 - 2 * i	
					
					
挖空的原理；判断什么时候打印星号，什么时候打印空格
	利用if判断				
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					
					