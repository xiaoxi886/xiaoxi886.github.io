1.内存大小转换
    2的10次方 = 1024
    1G  = 1024M
    1M  =  1024KB
    1KB = 1024B(Byte)
    1Byte = 8 bit



2.内存地址用4位16进制和8位16进制表示的区别。
    经常可以看到某些书籍上写的内存地址0x0001，在另外一些书籍上写的内存地址又变成了0x00000001，
    其实都是表示的编号为1的内存地址,在本质上并没有明显区别

    内存地址只是一个编号，代表一个内存空间,在计算机中存储器的容量是以字节为基本单位的,
    也就是说一个内存地址代表一个字节（8bit）的存储空间。
        例如：
            地址0x0001中的数据为1111 1111，也就是说数据1111 1111的编号为0x0001
            地址0x00000001中的数据为1111 1111，也就是说数据1111 1111的编号为0x00000001
            所以说用4位16进制表示的内存地址和用8位16进制表示的内存地址，其实都是代表一个8bit的存储空间而已

    [0x0000]---->[8bit空间]
    [0x0001]---->[8bit空间]
    [0x0002]---->[8bit空间]
    [0x0003]---->[8bit空间]
    [0x0004]---->[8bit空间]

    [0x00000000]---->[8bit空间]
    [0x00000001]---->[8bit空间]
    [0x00000002]---->[8bit空间]
    [0x00000003]---->[8bit空间]
    [0x00000004]---->[8bit空间]
    至于说为什么会出现一种是用4位十六进制表示内存地址，另一种用8位十六进制表示内存地址，
    那是根据不同的硬件环境来的。个人理解：
    有些CPU只能寻址16位（16根地址线），所以用4位十六进制表示地址就够用了。
    有些CPU只能寻址32位（32根地址线），所以用8位十六进制。


3.内存
    程序和数据平常存储在硬盘等存储器上，不管你开机或关机了，它们都是存在的，不会丢失。
    硬盘可以存储的东西很多，但其传输数据的速度较慢，所以需要运行程序或打开数据时，这些数据
    必须从硬盘等存储器上先传到另一种容量小但速度快得多的存储器，之后才送入CPU进行执行处理。
    这中间的存储器就是内存。

    无论何种存储器，软盘、硬盘、光盘或者内存，都有地址。因为它们要存储数据，所以就必须按一定
    的单位的数据分配一个地址。有了地址，程序才能找到这些数据。

    例如：
        如果让计算机在内存里记住“邵伟业”这个名字，可以示意为：

                邵       |       伟       |        业
          1000H | 1001H  | 1002H | 1003H  |  1004H | 1005H

        在第一行中，每一格表示一段内存，而格子里的内容是这段内容记下的数据；
        第二行中，每一格内数字就是对应的内存的地址，
        一个中文占两个字节，也就是占16bit（储存的方式为2进制，汉字编码成2进制后再进行储存，
        世界通用的有UTF-8，包含全世界国家需要的字符，）

        如果让计算机再内存中记住“ABC”，可示意为：

              A    |    B    |    C
            2000H  |  2001H  |  2002H
        一个英文或数字占一个字节，也就是8bit，多用ASCLL码编码

        邵字占两个字节，两个字节都有自己单独的地址，而如果想调用邵字，它的地址就为1000H，
        若数据占用多个字节，则以第一个字节的地址来表示数据的地址

        1000H只是邵字的地址，而数据都是以二进制储存的，下面则是用UTF-8中，邵字的编码

                            邵
            1001    0000    |   1011    0101
                1000H       |       1001H

        在UTF-8中，邵字的编码为1001000010110101,分别储存在地址1000H和1001H中

        下面则是在ASCLL码中，A的编码
                          A
                    0100    0001
                        1000H
        
        在ASCLL中，A的编码为0100 0001

        第一行分别是邵和A，它是给人看的
        第二行则是一串的0和1，这才是计算机内存中实际存储的数据
        第三行是内存的地址，并不是每个0和1都占有单独的地址，而是每8个才有一个地址，也就是说每个地址都有8bit的空间


4.总结：
        内存地址是内存当中存储数据的一个标识，并不是数据本身，通过内存地址可以找到内存当中存储的数据。